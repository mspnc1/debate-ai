// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Force a consistent NDK for all subprojects (Expo SDK 53 / RN 0.79 recommended)
ext.ndkVersion = "26.1.10909125"

buildscript {
  repositories {
    google()
    mavenCentral()
  }
  dependencies {
        classpath 'com.google.gms:google-services:4.4.1'
    classpath('com.android.tools.build:gradle')
    classpath('com.facebook.react:react-native-gradle-plugin')
    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')
  }
}

def reactNativeAndroidDir = new File(
  providers.exec {
    workingDir(rootDir)
    commandLine("node", "--print", "require.resolve('react-native/package.json')")
  }.standardOutput.asText.get().trim(),
  "../android"
)

allprojects {
  repositories {
    // Prefer published React Native artifacts with prefab (react-android) from Maven Central
    google()
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
  }
}

// Ensure expo-av has access to the React Android prefab package
subprojects { proj ->
  if (proj.name == 'expo-av') {
    proj.afterEvaluate {
      try {
        proj.dependencies.add('implementation', "com.facebook.react:react-android")
        println "[Gradle] Injected react-android dependency into :expo-av for prefab linkage"
        def androidExt = proj.extensions.findByName('android')
        if (androidExt != null && androidExt.hasProperty('buildFeatures')) {
          androidExt.buildFeatures.prefab = true
          println "[Gradle] Enabled prefab buildFeatures for :expo-av"
        }
      } catch (Exception ignored) {
        // Keep build resilient if Gradle configuration differs
      }
    }
  }
}

apply plugin: "expo-root-project"
apply plugin: "com.facebook.react.rootproject"
